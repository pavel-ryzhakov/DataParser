// <auto-generated />
using DataParser;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataParser.Migrations
{
    [DbContext(typeof(PassportsDbContext))]
    partial class PassportsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataParser.Changelog", b =>
                {
                    b.Property<int>("ChangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("change_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ChangeId"));

                    b.Property<bool>("ChangeStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("change_status");

                    b.Property<int>("DateOfChange")
                        .HasColumnType("int")
                        .HasColumnName("date_of_change");

                    b.Property<int>("NumberId")
                        .HasColumnType("integer")
                        .HasColumnName("number_id");

                    b.HasKey("ChangeId");

                    b.HasIndex("NumberId");

                    b.ToTable("changelog", (string)null);
                });

            modelBuilder.Entity("DataParser.PassportNumber", b =>
                {
                    b.Property<int>("NumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("number_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NumberId"));

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("SeriesId")
                        .HasColumnType("integer")
                        .HasColumnName("series_id");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("NumberId");

                    b.HasIndex("SeriesId");

                    b.ToTable("passport_numbers", (string)null);
                });

            modelBuilder.Entity("DataParser.PassportSeries", b =>
                {
                    b.Property<int>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("series_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SeriesId"));

                    b.Property<short>("Series")
                        .HasMaxLength(10)
                        .HasColumnType("smallint")
                        .HasColumnName("series");

                    b.HasKey("SeriesId");

                    b.ToTable("passport_series", (string)null);
                });

            modelBuilder.Entity("DataParser.Changelog", b =>
                {
                    b.HasOne("DataParser.PassportNumber", "PassportNumber")
                        .WithMany("Changelogs")
                        .HasForeignKey("NumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportNumber");
                });

            modelBuilder.Entity("DataParser.PassportNumber", b =>
                {
                    b.HasOne("DataParser.PassportSeries", "PassportSeries")
                        .WithMany("PassportNumbers")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportSeries");
                });

            modelBuilder.Entity("DataParser.PassportNumber", b =>
                {
                    b.Navigation("Changelogs");
                });

            modelBuilder.Entity("DataParser.PassportSeries", b =>
                {
                    b.Navigation("PassportNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
